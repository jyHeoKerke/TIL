# 221110 반복문(while)

# 반복문

- 반복적인 진행을 위해 사용
- 코드를 재사용할 수 있음!

- while
    - 몇 번 반복할 지 모를 때
    - 주어진 조건을 만족할 때 까지 계속
    - 만약 ~~~~한 상황이라면
    - 만약 조건식이 참이라면 계속
    - 무한하게
- for
    - 반복 횟수를 알 때
    - N번,X회
    - 1~n까지 A부터 d까지
    - 배열과 함께 활용함
- ~~ex)~~
    - 1~12까지만 유효할 때, 사용자가 올바른 시간을 입력할 때 까지 / while
    - 학생이 30명 있습니다 출석부에 사용할 반복문은? / for
    - 종료 버튼을 누를 때 까지 반복 / while
    - ARS 서비스를 만들 예정입니다. 0을 누르면 종료됩니다  / while
    - 1부터 100가지의 정수 중에서 홀수의 개수를 카운팅 할 예정이다 / for

- **while의 사용**
    
    **while의 사용**
    
    ```java
    		int i=1;
    		while(i<=3){
    			System.out.println("안녕하세요!");
    			i++;
    		} //-> 끝 블록에서 바로 조건식 라인으로 이동!
    ```
    
    해당 코드를 디버깅표를 통해 확인해보자
    
    | i | i <= 3 | 출력 |
    | --- | --- | --- |
    | 1 | T | 안녕 |
    | 2 | T | 안녕 |
    | 3 | T | 안녕 |
    | 4 | F |  |
    
    ```java
    System.out.println("i= " + i);
    // 출력값 4
    ```
    
    ```java
    		int a = 0;
    		int b = 10;
    		
    		while (a<b) {
    			a += 5;
    			b++;
    		 }
    		
    		System.out.println("a=" + a);
    		System.out.println("b=" + b);
    
    		// a는 15 b는 13
    ```
    
    | a | b |  |
    | --- | --- | --- |
    | 0 | 10 | T |
    | 5 | 11 | T |
    | 10 | 12 | T |
    | 15 | 13 | F |
    
    ```java
    int num = 6;
    		int i = 1 ;
    		while(i<=num) {
    			if(num%1==0)
    			System.out.println( "i=" + i );
    		}
    		i++;
    ```
    
    | num | i | i≤num | num%i==0 |  |
    | --- | --- | --- | --- | --- |
    | 6 | 1 | T | T | 1 |
    |  | 2 | T | T | 2 |
    |  | 3 | T | T | 3 |
    |  | 4 | T | F | 4 |
    |  | 5 | T | F |  |
    |  | 6 | T | T | 6 |
    
    ```java
    //[소수]
    		// 약수가 1과 자기자신인 수
    		//약수가 2개인 수
    		int num=10;
    		
    		int i=1;
    		while(i<=num) {
    			if (i가 약수라면) {
    				약수를 찾은것!
    			}
    			i++;
    		}
    		
    	
    		
    		if (num가 소수라면) {
    			System.out.println( num +"은 소수입니다" );
    		}
    		}
    //----------------------------------------------------------
    
    		int num=3;
    		
    		int i=1;
    		int cnt=0;
    		while(i<=num) {
    			if (num%1==0) { //i가 num의 약수라면
    				cnt++;//약수를 찾은 것!
    			}
    			i++;
    		}
    		
    	
    	
    		if (num==2) { //num이 소수라면
    			System.out.println( num +"은 소수입니다" );
    		}
    		else {
    		    System.out.println(num+"은 소수가 아닙니다.");
    
    ```
    
    | num | i | cnt | i≤num | num%i==0 |
    | --- | --- | --- | --- | --- |
    | 3 | 1 | 0 | T | T |
    |  | 2 | 1 | T | F |
    |  | 3 |  | T | T |
    |  | 4 | 2 | F |  |
    
    | cnt==2 |  |
    | --- | --- |
    | T | 소수 |
    
    <aside>
    ✔️ 해당 문제를 풀이해보자
    
    </aside>
    
    - 조건
        - 10~99사이의 값을 랜덤으로 생성해서 num변수에 저장
        - ex) num = 15 출력
        - 해당값의 약수를 출력
    
    ```java
    Random rand = new Random(); 
    		int num = rand.nextInt(90)+10; // 0~89
    		
    				System.out.println("수는"+ num +"입니다.");
    				System.out.println("해당 수의 약수는");
    			
    			
    		int i = 1 ;
    		while(num >= i) {
    			if(num%i == 0) { //i가 num의 약수라면 
    				System.out.print( i + "," );
    		}	
    		i++;
    		
    		}
    		System.out.println("입니다.");
    
    ```
    
    <aside>
    ✔️ 해당 문제를 풀이해보자
    
    </aside>
    
    - 조건
        - 1~1000까지의 소수를 추출
    
    ```java
    		int numb = 1;
    		while(numb <= 1000 ) {
    			
    		
    			int a = 1;
    			int cnt = 0;
    			while(a <= numb ) {
    				if( numb%a ==0 ) {
    					cnt++;
    			}
    			a++;
    			
    		}
    			if (cnt == 2) {
    				System.out.println(numb + " ");
    			}
    			numb++;
    	}
    
    ```
    
    <aside>
    ✔️ 해당 문제를 풀이해보자
    
    </aside>
    
    - 조건
        - 입력한 정수가 '완전수' 인지 아닌지 출력해주세요!
        완전수란? 자기자신을 제외한 약수들의 합이 자기 자신인것
    
    ```java
    Scanner sc = new Scanner(System.in);
    		System.out.println("정수를 입력");
    		int num = sc.nextInt();
    		
    		int sum=0;
    		int i = 1;
    		while ( i< num ) {
    			if(num%i == 0) {
    				sum +=i;
    			}
    			i++;
    		}
    		
    		if (sum == num) {
    			System.out.println("완전수입니다.");
    				
    		}
    		else {
    				System.out.println("완전수가 아닙니다.");
    			}
    ```
    
- **while(true)의 사용**
    
    **while(true)**
    
    무한하게 수행되는 소스코드
    
    **종료조건**을 넣어주어야 한다
    
    ```java
    	
    	Random rand=new Random();
    		while(true) {
    			int num=rand.nextInt(10); //0~9
    			System.out.println("num=" + num);
    			if (num==5) { // "종료조건"
    				break; //자신과 가장 가까운 반복문의 바깥으로 즉시 이동!
    			}
    	
    		}
    ```
    
    메뉴를 고르는 코드를 만들어보자
    
    - 조건
        1. 커피  2. 아이스티  3. 라떼  0.종료
    
    ```java
    		Scanner sc= new Scanner(System.in);
    		System.out.println("===메뉴===");
    		System.out.println("1.커피");
    		System.out.println("2.아이스티");
    		System.out.println("3.라떼 ");
    		System.out.println("0. 종료");
    		System.out.println("입력");
    		int num = sc.nextInt();
    		if(num==0) { //종료조건
    		}
    		else if (num>=1 && num<=3) {//유효성 검사
    			System.out.println("메뉴출력");
    		}
    		else {//잘못입력했다면 유효성 검사
    			System.out.println("없는 메뉴입니다!");
    		}
    ```
    
    <aside>
    ✔️ 해당 문제를 풀이해보자
    
    </aside>
    
    - 정수
        - 정수 2개를 입력받아 최소 정수부터 최대 정수까지 나열
        - 입력받은 정수 2개가 같을 시 다시 입력
    
    ```java
    Scanner sc= new Scanner(System.in);
    		
    		int a,b;
    		
    		while (true) {
    		System.out.println("정수 1: ");
    		a=sc.nextInt();
    		System.out.println("정수 2: ");
    		b=sc.nextInt();
    		if(a!=b) { //종료조건
    			break;
    		
    		}
    		System.out.println("다시 입력해주세요");
    	}
    		
    		if(a>b) { //a가 b보다 크다면 a와 b를 교환해줘
    			int tmp =a;
    			a=b;
    			b=tmp;
    			
    		}
    		
    		int i=a;
    		while (i<=b) {
    			System.out.println(i+"  ");
    			i++;
    		}
    
    ```
    
    교환 알고리즘을 이용해 풀이
    
    | a | b | tmp |
    | --- | --- | --- |
    | 5 | 1 |  |
    |  | 5 | 1 |
    | 1 | 5 |  |
    
    임시 저장변수를 만들어준다 ( tmp )
    
    숫자 맞추기 게임을 만들어보자
    
    - 조건
        - 1~100 중 랜덤으로 값 저장
        - 사람이 맞추는 게임
        - 몇 번 만에 맞추는 지와 맞출 수 있도록 up, down 으로 알려줌
    
    ```java
    			int cnt=0; // SCOPE
          Scanner sc=new Scanner(System.in);
          int L=1,H=100; // 사용자의 편의성 고려
          while(true) {
             int ans;
             while(true) { // 유효성 검사
                System.out.print(L+"~"+H+" 정답은? ");
                ans=sc.nextInt();
                if(L<=ans && ans<=H) {
                   break;
                }
                System.out.println("  잘못입력했습니다");
             }
             cnt++;
    
             if(com==ans) { // "종료조건"
                System.out.println("정답입니다");
                break;
             }
    
             if(ans<com) {
                System.out.println("UP...");
                L=ans+1;
             }
             else {
                System.out.println("DOWN...");
                H=ans-1;
             }
          }
    
          System.out.println("당신은 "+ cnt +"번만에 맞추셨습니다.");
    
       }
    
    }
    ```
    
    해당문제를 풀이해보자
    
    점수1: 1~100
    
    점수2: 1~100
    
    잘못 입력하면 다시!
    
    총점___, 평균___
    
    80이상 A
    
    60 이상B
    
    60 미만 C ⇒ 다시 입력 창
    Scanner sc = new Scanner(System.in);


	int s1 , s2;
	while(true) {
		while(true) {
			System.out.println("점수 1:");
			s1= sc.nextInt();
			if (s1 >= 0 && s1 <=100 ) { // 종료조건
				break;
			}
			System.out.println("잘못입력하였습니다.");
		}	
		while(true) {
			System.out.println("점수 2:");
			s2 = sc.nextInt();
			if (s2 >= 0 && s2 <= 100 ) { // 종료조건
				break;
			}
			System.out.println("잘못입력하였습니다.");
				
		}
		
			int sum = s1 + s2;
			double avg = sum*1.0/2;
			System.out.println("총점 :"+ sum + "점" );
			System.out.println("평균 :"+ avg + "점" );
			
			char grade ='C';
			if (avg>=80.0) {
				grade='A';
			}
			else if (avg>=60.0) {
				grade='B';
			}
			System.out.println(grade+"등급");
			
			if (grade !='C') {
				break;
			}
			System.out.println("!재시험!");
		
		}
    
    
